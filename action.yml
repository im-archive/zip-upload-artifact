name: Zip & Upload Artifact

description: Zips Artifact and then Uploads it to GitHub

inputs:
  # These are the same inputs as the Upload Artifact action.
  # https://github.com/actions/upload-artifact
  name:
    description: The Artifact name
    default: artifact
  path:
    description: A file, directory, or wildcard pattern that describes what to upload
    required: true
  if-no-files-found:
    description: |
      The action to take if no files are found at the path:

      Options:
      - warn: Warning sent, but build does not fail
      - error: Error sent, and build fails
      - info: Nothing sent, and build does not fail
    default: warn
  retention-days:
    description: |
      The number of days to retain the artifact before it expires. Value cannot be over 30 days
    default: '15'

runs:
  using: 'composite'
  steps:
    - name: Determine if Path is a File or Directory
      id: validation
      shell: python
      run: |
        import os

        def set_env(name, value):
          name_value = f'{name}={value}'
          print(f'- Set {name_value}')

          github_output = os.getenv('GITHUB_OUTPUT')
          with open(github_output, 'a+') as writer:
            writer.write(f'{name_value}{os.linesep}')

        print('#######################################')
        print('Validate path')
        print('#######################################')

        input_name = os.getenv('INPUT_NAME')
        print(f'- Incoming Input Name: {input_name}')

        input_path = os.getenv('INPUT_PATH')
        print(f'- Incoming Input Path: {input_path}')

        is_path_file = os.path.isfile(input_path)
        print(f'- Is Path a File: {is_path_file}')

        if is_path_file:
          set_env('LOOKUP_PATH', input_path)
          set_env('DESTINATION_PATH', f'{input_path}.zip')

        else:
          set_env('LOOKUP_PATH', f'{input_path}/*')
          set_env('DESTINATION_PATH', f'{input_path}/{input_name}.zip')

        print('Done Validating!')
        print('')
      env:
        INPUT_NAME: ${{ inputs.name }}
        INPUT_PATH: ${{ inputs.path }}

    - name: Show validation outputs
      shell: bash
      run: |
        echo "Show validation outputs that have been set in the validation step..."
        echo "LOOKUP_PATH: $LOOKUP_PATH"
        echo "DESTINATION_PATH: $DESTINATION_PATH"
        echo ""
      env:
        LOOKUP_PATH: ${{ steps.validation.outputs.LOOKUP_PATH }}
        DESTINATION_PATH: ${{ steps.validation.outputs.DESTINATION_PATH }}

    - name: Zip Artifact
      shell: pwsh
      run: |
        echo "Zipping Artifact File..."
        Compress-Archive -Path ./${{ steps.validation.outputs.LOOKUP_PATH }} -DestinationPath "./${{ steps.validation.outputs.DESTINATION_PATH }}"
        echo "DONE!"

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.name }}
        path: ${{ steps.validation.outputs.DESTINATION_PATH }}
        if-no-files-found: ${{ inputs.if-no-files-found }}
        retention-days: ${{ inputs.retention-days }}
